#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Sat May 15 15:44:30 2021
#

import wx
from wx.core import Dialog
import london_feladat
import wx.adv

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((424, 455))
        self.SetTitle("London")

        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, u"Kilépés", "")
        self.Bind(wx.EVT_MENU, self.click_kilepes, item)
        wxglade_tmp_menu.Append(wx.ID_ANY, "meg legyen egy radio", "", wx.ITEM_RADIO)
        wxglade_tmp_menu.Append(wx.ID_ANY, "checkable", "", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(wx.ID_ANY, "item", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        self.frame_menubar.Append(wxglade_tmp_menu, "Edit")
        wxglade_tmp_menu = wx.Menu()
        self.frame_menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)

        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.panel_1.SetMinSize((384, 367))
        sizer_1.Add(self.panel_1, 0, 0, 0)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, "London")
        label_1.SetFont(wx.Font(15, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        sizer_2.Add(label_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_3, 1, wx.ALL | wx.EXPAND, 5)

        self.javit_btn = wx.Button(self.panel_1, wx.ID_ANY, u"javít")
        sizer_3.Add(self.javit_btn, 0, wx.LEFT | wx.RIGHT, 45)

        self.nevjegy_btn = wx.Button(self.panel_1, wx.ID_ANY, u"Névjegy", style=wx.BU_AUTODRAW)
        sizer_3.Add(self.nevjegy_btn, 1, wx.LEFT | wx.RIGHT, 45)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "4.elso helyezettek")
        sizer_4.Add(label_2, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 10)

        self.text_elso_hely = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        sizer_4.Add(self.text_elso_hely, 1, wx.BOTTOM | wx.RIGHT | wx.TOP, 10)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_5, 1, wx.EXPAND, 0)

        label_3 = wx.StaticText(self.panel_1, wx.ID_ANY, "5.helyezettek")
        sizer_5.Add(label_3, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 10)

        self.text_helyezettek = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        sizer_5.Add(self.text_helyezettek, 1, wx.BOTTOM | wx.RIGHT | wx.TOP, 10)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_6, 1, wx.EXPAND, 0)

        label_4 = wx.StaticText(self.panel_1, wx.ID_ANY, u"6. egyéni helyezettek")
        sizer_6.Add(label_4, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 10)

        self.list_text_egyszeri_vers = wx.ListBox(self.panel_1, wx.ID_ANY, choices=["choice 1"])
        sizer_6.Add(self.list_text_egyszeri_vers, 1, wx.BOTTOM | wx.RIGHT | wx.TOP, 10)

        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_7, 1, wx.EXPAND, 0)

        label_5 = wx.StaticText(self.panel_1, wx.ID_ANY, u"7.sportágak")
        sizer_7.Add(label_5, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 10)

        self.list_text_sportagak = wx.ListBox(self.panel_1, wx.ID_ANY, choices=["choice 1"])
        sizer_7.Add(self.list_text_sportagak, 1, wx.BOTTOM | wx.RIGHT | wx.TOP, 10)

        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_8, 1, wx.EXPAND, 0)

        label_6 = wx.StaticText(self.panel_1, wx.ID_ANY, u"8.legtöbbet résztvevő")
        sizer_8.Add(label_6, 1, wx.BOTTOM | wx.LEFT | wx.TOP, 10)

        self.text_legtobb = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        sizer_8.Add(self.text_legtobb, 1, wx.BOTTOM | wx.RIGHT | wx.TOP, 10)

        self.feladatok_btn = wx.Button(self.panel_1, wx.ID_ANY, "feladatok")
        sizer_2.Add(self.feladatok_btn, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 15)

        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(sizer_9, 1, wx.EXPAND, 0)

        self.ir_btn = wx.Button(self.panel_1, wx.ID_ANY, "iras")
        sizer_9.Add(self.ir_btn, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 10)

        self.olvas_btn = wx.Button(self.panel_1, wx.ID_ANY, "olvasas")
        sizer_9.Add(self.olvas_btn, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 10)

        self.olvas_check_list = wx.CheckListBox(self.panel_1, wx.ID_ANY, choices=["choice 1"])
        sizer_2.Add(self.olvas_check_list, 0, 0, 0)

        self.panel_1.SetSizer(sizer_2)

        self.SetSizer(sizer_1)

        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.click_javit, self.javit_btn)
        self.Bind(wx.EVT_BUTTON, self.click_nevjegy, self.nevjegy_btn)
        self.Bind(wx.EVT_BUTTON, self.click_feladat, self.feladatok_btn)
        # end wxGlade
    def click_kilepes(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'click_kilepes' not implemented!")
        event.Skip()
    def click_javit(self, event):  # wxGlade: MyFrame.<event_handler>
        mehet=wx.MessageDialog(None, "Biztos ki akarja javítani?", "Üzike", wx.YES_NO)
        mehet.ShowModal()
        fd=wx.FileDialog(self, "Kiírás", "","london2.txt", "*.txt", style=wx.FD_SAVE)
        if fd.ShowModal()==wx.ID_OK:
            utvonal=fd.GetPath()
            print(utvonal)
            london_feladat.javit(london_feladat.eredmenyek, utvonal)

        #london_feladat.javit(london_feladat.eredmenyek, london_feladat.KIIRF)
        event.Skip()

    def click_nevjegy(self, event):  # wxGlade: MyFrame.<event_handler>
        njBox=AboutFrame(None, "London")
        wx.adv.AboutBox(njBox.info)
        event.Skip()
        
    def click_feladat(self, event):
        self.kiIrdbEgyeniek()
        self.kiirElsoHelyek()
        self.kiirHelyezettek()
        self.kiirSportagak()
        event.Skip()

    def kiirElsoHelyek(self):
        eredmenyek = london_feladat.eredmenyek
        db = london_feladat.elsoHelyezett(eredmenyek)
        self.text_elso_hely.SetLabelText(str(db))

    def kiirHelyezettek(self):
        eredmenyek = london_feladat.eredmenyek
        db = london_feladat.dbHelyezesek(eredmenyek)
        for key, value in db.items():
            self.text_helyezettek.SetLabelText(f"helyezes: {key} hányan: {value} \n")

    def kiIrdbEgyeniek(self):
        eredmenyek = london_feladat.eredmenyek
        dictDb = london_feladat.dbEgyeniek(eredmenyek)
        kiirLista = []
        for key, value in dictDb.items():
            kiirLista.append(f"helyezes: {key} hányan: {value} \n")

        self.list_text_egyszeri_vers.Clear()
        self.list_text_egyszeri_vers.Append(kiirLista)

    def kiirSportagak(self):
        eredmeny = self.sportagak()
        self.list_text_sportagak.Clear()
        for ered in eredmeny:
            self.list_text_sportagak.Append(str(ered))

    def sportagak(self):
        eredmenyek = london_feladat.eredmenyek
        sportagak = set([ered.sportag for ered in eredmenyek])
        return sportagak

    def legtobbResztvevoCsoport(self):
        eredmenyek = london_feladat.eredmenyek
        dictSportResztVevo = {}
        sportagak = list(set([ered.sportag for ered in eredmenyek]))

        for sportag in sportagak:

            for ered in eredmenyek:
                if (
                    ered.sportag == sportag
                    and dictSportResztVevo.get(sportag, "nem van ilyen")
                    in dictSportResztVevo.values()
                ):
                    dictSportResztVevo[str(sportag)] += ered.hanyan_ertek_el
                else:
                    dictSportResztVevo[str(sportag)] = ered.hanyan_ertek_el
        print(dictSportResztVevo)



# end of class MyFrame

# end of class MyFrame


'''class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.MINIMIZE_BOX
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetTitle("Confirm")

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_3, 1, wx.EXPAND, 0)

        label_1 = wx.StaticText(
            self,
            wx.ID_ANY,
            "Biztosan javitani akarja?",
            style=wx.ALIGN_CENTER_HORIZONTAL,
        )
        sizer_3.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 30)

        sizer_2 = wx.StdDialogButtonSizer()
        sizer_1.Add(sizer_2, 0, wx.ALIGN_RIGHT | wx.ALL, 4)

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        self.button_OK.SetDefault()
        sizer_2.AddButton(self.button_OK)

        self.button_CANCEL = wx.Button(self, wx.ID_CANCEL, "")
        sizer_2.AddButton(self.button_CANCEL)

        sizer_2.Realize()

        self.SetSizer(sizer_1)
        sizer_1.Fit(self)

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())

        self.Layout()

        self.Bind(wx.EVT_CLOSE, self.close_x, self)
        # end wxGlade

    def close_x(self, event):  # wxGlade: MyDialog.<event_handler>
    
        event.Skip()
'''

# end of class MyDialog


class AboutFrame(wx.Frame):
    def __init__(self, parent,title):
        super(AboutFrame,self).__init__(parent, title=title)


        description='''ez teszt'''
        licence='''gpl'''
        self.info=wx.adv.AboutDialogInfo()
        self.info.SetIcon(wx.Icon('src\\vm.jpg', wx.BITMAP_TYPE_JPEG))
        self.info.SetName("london")
        self.info.SetVersion('1.0')
        self.info.SetDescription(description)
        self.info.SetLicence(licence)

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        #self.button_OK.SetDefault()

     

        self.Layout()

        # end wxGlade


# end of class MyDialog1


class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True


# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
